{"version":3,"sources":["components/Banner.js","components/firebase.js","components/MultiChoice.js","components/jquery.js","components/RichTextEditor.js","components/hierarchy/sidebarStyle.js","components/hierarchy/itemStyle.js","components/hierarchy/sidebarItem.js","components/hierarchy/sidebar.js","components/MainEditor.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","MultiChoice","props","flushData","setState","currQuestion","currOption","currScore","Questions","readyToDisplay","chooseOption","option","nextQuestion","state","answer","console","log","incScore","newQuestion","finishQuiz","alert","length","newScore","parseQuestions","data","content","JSON","parse","ops","insert","split","forEach","elem","qSeg","prompt","choices","i","push","addQuestion","queryDB","firestore","collection","where","get","then","querySnapshot","empty","docs","Data","catch","e","temp","question","this","map","q","onClick","id","history","Component","window","jQuery","$","katex","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","RichTextEditor","queryAndLoad","selectedNote","doc","exists","loadIntoRTF","body","quill","current","editor","setContents","storeIntoDatabase","stringify","getContents","update","generatePDF","a","delta","pdfExporter","generatePdf","pdfAsBlob","saveAs","onEditorUpdate","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","React","createRef","mathquill4quill","Quill","enableMathQuillFormulaAuthoring","options","ref","modules","formula","toolbar","theme","onChange","sidebarStyles","root","backgroundColor","palette","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","itemStyles","listItem","cursor","textSection","maxWidth","fontWeight","deleteIcon","SidebarItem","selectNote","n","deleteNote","confirm","title","index","note","classes","selectedNoteIndex","ListItem","selected","alignItems","withStyles","Sidebar","createNoteSetup","addingNote","createNote","updateTitle","txt","notes","Button","type","placeholder","onKeyUp","target","value","List","Divider","MainEditor","componentDidMount","onSnapshot","su","noteIndex","indexOf","filter","elngth","selectedNotesIndex","delete","add","timestamp","FieldValue","serverTimestamp","newFromDB","newID","newNoteIndex","seslectedNoteIndex","App","path","component","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f6d0e6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport '../index.css'\r\n\r\n//The banner at the top of all our routes\r\nfunction Banner(){\r\n\treturn (\r\n\t\t<nav className = \"Home\">\r\n\t\t\t<h1>EZ Math Editor</h1>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Banner;","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\";\r\n\r\n//handles the authentication to the back end\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBIZUh5JGnR3ZuHRHEH_-Scodkf7iHsTXE\",\r\n    authDomain: \"ez-math-editor.firebaseapp.com\",\r\n    projectId: \"ez-math-editor\",\r\n    storageBucket: \"ez-math-editor.appspot.com\",\r\n    messagingSenderId: \"254306906260\",\r\n    appId: \"1:254306906260:web:c1e08043359d912454c481\",\r\n    measurementId: \"G-FEDCPCWDRR\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component  }from 'react';\r\nimport './MultiChoice.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport firebase from './firebase';\r\n// import Quill from 'quill';\r\n\r\n//the router that presents the multiple choice testing\r\n//handles a collection of questions and assesses the user\r\n//data on these questions are pulled directly from the back end\r\nexport default class MultiChoice extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrQuestion : 0,\r\n\t\t\tcurrOption : \"\",\r\n\t\t\tcurrScore : 0,\r\n\t\t\tQuestions : [],\r\n\t\t\treadyToDisplay : false\r\n\t\t};\r\n\t}\r\n\r\n\t//helper functions handle quiz logic\r\n\t//option refers to the content of the q itself\r\n\tflushData = () => {\r\n\t\tthis.setState( {\r\n\t\t\tcurrQuestion : 0,\r\n\t\t\tcurrOption : \"\",\r\n\t\t\tcurrScore : 0,\r\n\t\t\tQuestions : [],\r\n\t\t\treadyToDisplay : false\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tchooseOption = (option) => {\r\n\t\t// console.log(\"chose \" + option);\r\n\t\tthis.setState( {currOption : option} );\r\n\t}\r\n\r\n\tnextQuestion = () => {\r\n\t\tif (this.state.currOption === this.state.Questions[this.state.currQuestion].answer){\r\n\t\t\tconsole.log(\"right\");\r\n\t\t\tthis.incScore();\r\n\t\t} \r\n\t\tlet newQuestion = this.state.currQuestion + 1;\r\n\t\tthis.setState({currQuestion : newQuestion});\r\n\t\tthis.chooseOption(\"\");\r\n\r\n\t}\r\n\r\n\tfinishQuiz = () => {\r\n\t\tif (this.state.currOption === this.state.Questions[this.state.currQuestion].answer){\r\n\t\t\tconsole.log(\"right\");\r\n\t\t\tthis.incScore();\r\n\t\t}\t\t\r\n\t\tconsole.log(this.state.currOption === this.state.Questions[this.state.currQuestion].answer)\r\n\t\tthis.chooseOption(this.state.currOption);\r\n\t\tlet newQuestion = this.state.currQuestion + 1;\r\n\t\tthis.setState({currQuestion : newQuestion, readyToDisplay : false},() => {alert(\"you scored \" + this.state.currScore + \" out of \" + this.state.Questions.length);} );\r\n\r\n\t}\r\n\r\n\tincScore = () => {\r\n\t\tlet newScore = this.state.currScore+1;\r\n\t\tthis.setState({currScore : newScore});\r\n\t}\r\n\t\r\n\t//stores all the questions into its array in state\r\n\tparseQuestions = (data) => {\r\n\t\tconsole.log(data);\r\n\t\tvar content = JSON.parse(data).ops[0].insert;\r\n\t\tconsole.log(content);\r\n\r\n\t\tcontent.split(\"\\n\").forEach( (elem) => {\r\n\t\t\t let qSeg = elem.split(\";;\");\r\n\t\t\t if(qSeg.length > 3){\r\n\t\t\t\tlet prompt = \"\";\r\n\t\t\t\tlet choices = []\r\n\t\t\t\tlet answer = \"\"\r\n\t\t\t\tfor(let i = 0; i < qSeg.length; ++i){ \r\n\t\t\t\t\tif(i === 0) {\r\n\t\t\t\t\t\tprompt = qSeg[i];\r\n\t\t\t\t\t} else if (i === qSeg.length-1){\r\n\t\t\t\t\t   answer = choices[qSeg[i]-1];//load answer\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchoices.push(qSeg[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t   //  console.log(prompt);\r\n   \r\n\t\t\t\tthis.addQuestion(prompt, choices, answer);\r\n\t\t\t }\r\n\t\t\r\n\t\t })\r\n\t\t this.setState({readyToDisplay : true})\r\n\t\t console.log(this.state.Questions);\r\n\r\n\t}\r\n\r\n\t//goes through the backend and gathers all the question data\r\n\tqueryDB = () => {\r\n\t\tthis.flushData();\r\n\t\tconsole.log(\"querying\");\r\n\t\tfirebase.firestore().collection(\"user_data\")\r\n\t\t.where(\"UID\", \"==\", 1) //todo multi user support\r\n\t\t.get()\r\n\t\t.then((querySnapshot) => {\r\n\t\t\t//assume UIDs to be unique\r\n\t\t\t//if querySnapshot isn't empty, then we found the ID\r\n\t\t\tif(!querySnapshot.empty){ \r\n\t\t\t\tthis.parseQuestions(querySnapshot.docs[0].data().Data); //get [0] since theres only gonna be one\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t});\r\n\t}\r\n\r\n\t//adds a question to the question container\r\n\taddQuestion = (prompt, choices, answer) => {\r\n\t\tvar temp = this.state.Questions;\r\n\t\tvar question = {\r\n\t\t\tprompt : prompt,\r\n\t\t\tchoices : choices,\r\n\t\t\tanswer : answer\r\n\t\t}\r\n\r\n\t\ttemp.push(question)\r\n\t\tthis.setState({\r\n\t\t\tQuestions : temp\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className = \"content\">\r\n\t\t\t\t    <div className=\"Quiz\">\r\n\t\t\t\t\t<h1>{this.state.readyToDisplay && this.state.Questions[this.state.currQuestion].prompt}</h1>\r\n\t\t\t\t\t<h2>{this.state.readyToDisplay && \"chose: \" + this.state.currOption} </h2>\r\n\t\t\t\t\t\t <div className=\"q-group\">\r\n\t\t\t\t\t\t {this.state.readyToDisplay && this.state.Questions[this.state.currQuestion].choices.map( (q, i) => { //for each choice, display a question\r\n\t\t\t\t\t\t\t return (<button \r\n\t\t\t\t\t\t\t\tkey= {i}\r\n\t\t\t\t\t\t\t \tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t this.chooseOption(q);\r\n\t\t\t\t\t\t\t\t }}>\r\n\t\t\t\t\t\t\t\t\t {q}\r\n\t\t\t\t\t\t\t\t </button>)\r\n\t\t\t\t\t\t })}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t{this.state.readyToDisplay && this.state.currQuestion === this.state.Questions.length - 1 ? (\r\n\t\t\t\t\t\t\t<button onClick={this.finishQuiz} id=\"nextQuestion\">\r\n\t\t\t\t\t\t\tFinish Quiz\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : this.state.readyToDisplay && this.state.currQuestion != this.state.Questions.length - 1 ? (\r\n\t\t\t\t\t\t\t<button onClick={this.nextQuestion} id=\"nextQuestion\">\r\n\t\t\t\t\t\t\tNext Question\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) :  \"\"}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button onClick = {this.queryDB}> Load Test</button>\r\n\t\t\t\t\t<button onClick = { () => {\r\n\t\t\t\t\t\tthis.props.history.push('/EZ-Math-Editor')\r\n\t\t\t\t\t}}> Switch to Editor Mode</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n","import $ from \"jquery\";\r\n\r\nwindow.jQuery = window.$ = $;","import React, { useEffect, useState, useRef, useCallback  }from 'react';\r\nimport '../App.css';\r\nimport { saveAs } from 'file-saver';\r\nimport { pdfExporter } from 'quill-to-pdf';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport firebase from './firebase';\r\nimport \"quill/dist/quill.snow.css\"\r\nimport Quill from \"quill\"\r\nimport ReactQuill from 'react-quill';\r\nimport katex from \"katex\";\r\n\r\nimport \"katex/dist/katex.css\";\r\n\r\nimport \"./jquery\";\r\nimport \"mathquill/build/mathquill.js\";\r\nimport \"mathquill/build/mathquill.css\";\r\n\r\nimport mathquill4quill from \"mathquill4quill\";\r\nimport \"mathquill4quill/mathquill4quill.css\";\r\nimport { ContactlessOutlined } from '@material-ui/icons';\r\nwindow.katex = katex;\r\n\r\n//read docs for this, gives us everything for the toolbar options (set below)\r\nconst TOOLBAR_OPTIONS = [\r\n\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\t[{ font: [] }],\r\n\t[{ list: \"ordered\" }, { list: \"bullet\" }],\r\n\t[\"bold\", \"italic\", \"underline\"],\r\n\t[{ color: [] }, { background: [] }],\r\n\t[{ script: \"sub\" }, { script: \"super\" }],\r\n\t[{ align: [] }],\r\n\t[\"image\", \"blockquote\", \"code-block\"],\r\n\t['formula'],\r\n\t[\"clean\"],\r\n  ]\r\n\r\nexport default class RichTextEditor extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.quill = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tid : '',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst enableMathQuillFormulaAuthoring = mathquill4quill({ Quill, katex });\r\n\t\tenableMathQuillFormulaAuthoring(\r\n\t\t  this.quill.current.editor,\r\n\t\t  this.props.options\r\n\t\t);\r\n\t\tthis.setState({\r\n\t\t\tid : this.props.selectedNote.id\r\n\t\t}, () => { this.queryAndLoad() } )\r\n\t\t\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tthis.storeIntoDatabase();\r\n\t}\r\n\tcomponentDidUpdate(){\r\n\t\tif(this.props.selectedNote.id !== this.state.id){\r\n\t\t\tconsole.log(\"switching note\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tid : this.props.selectedNote.id\r\n\t\t\t}, () => { this.queryAndLoad() } )\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//firebase for backend\r\n\tqueryAndLoad = () => {\r\n\t\tconsole.log(this.props.selectedNote.id);\r\n\t\tfirebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"notes\")\r\n\t\t\t.doc(this.props.selectedNote.id)\r\n\t\t\t.get()\r\n\t\t\t.then((doc) => {\r\n\t\t\t\tif(doc.exists){\r\n\t\t\t\tthis.loadIntoRTF(doc.data().body); //get [0] since theres only gonna be one\r\n\t\t\t\t\t\r\n\t\t\t\t} else{\r\n\t\t\t\t\tconsole.log(\"no data found\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t\t});\r\n\r\n\t}\r\n\t\r\n\r\n\t//inter-component communication via ref\r\n\t//rigged such that pressing button uploads data from firebase into the RTF doc itself\r\n\tloadIntoRTF = (data) => {\r\n\t\tconsole.log(data);\r\n\t\tthis.quill.current.editor.setContents(JSON.parse(data));\r\n\t}\r\n\r\n\t//saves whatever is in RTF box to database\r\n\tstoreIntoDatabase = () => {\r\n\t\tconst data = JSON.stringify( this.quill.current.editor.getContents());\r\n\t\t// console.log(data);\r\n\t\tfirebase\r\n\t\t.firestore()\r\n\t\t.collection(\"notes\")\r\n\t\t.doc(this.props.selectedNote.id)\r\n\t\t.update({\r\n\t\t\tbody : data\r\n\t\t}).catch((e) => { console.log(\"error turing update op\")});\r\n\r\n\t}\r\n\r\n\r\n\tgeneratePDF = async () => {\r\n\t\tconst delta = this.quill.current.editor.getContents(); // gets the Quill delta\r\n\t\tconst pdfAsBlob = await pdfExporter.generatePdf(delta); // converts to PDF\r\n\t\tsaveAs(pdfAsBlob, 'pdf-export.pdf'); // downloads from the browser\r\n\t}\r\n\r\n\t//extremely inneficient - saves at every change\r\n\tonEditorUpdate = debounce( () => {\r\n\t\tconsole.log(\"saved\");\r\n\t\tthis.storeIntoDatabase();\r\n\t}, 1500);\r\n\t\t\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div> \r\n\t\t\t\t<div className=\"container\"> \r\n\t\t\t\t\t<ReactQuill\r\n\t\t\t\t\t\tref = {this.quill}\r\n\t\t\t\t\t\tid=\"editor\"\r\n\t\t\t\t\t\tmodules={{\r\n\t\t\t\t\t\t\tformula: true,\r\n\t\t\t\t\t\t\ttoolbar: TOOLBAR_OPTIONS\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttheme=\"snow\"\r\n\t\t\t\t\t\tonChange={this.onEditorUpdate}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button onClick={this.queryAndLoad}>Load from Database to RTF</button>\r\n\t\t\t\t\t<button onClick={this.storeIntoDatabase}>Save from RTF into Database</button>\r\n\t\t\t\t\t{/* <button onClick={wipeData}>Wipe Data</button> */}\r\n\t\t\t\t\t<button onClick={this.generatePDF}>get your pdf</button> \r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\t//https://github.com/portexe/evernote-clone/blob/master/src/helpers.js\r\n\texport function debounce (a,b,c) { //cancels a function everytime deboucne is called, until a window of time is long enough\r\n\t\tvar d,e;\r\n\t\treturn function(){\r\n\t\t  function h(){\r\n\t\t\td=null;\r\n\t\t\tc||(e=a.apply(f,g));\r\n\t\t  }\r\n\t\t  var f=this,g=arguments;\r\n\t\t  return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n\t\t}\r\n\t  }\r\n\r\n  /*\r\nexport default function RichTextEditor() {\r\n\r\n\tconst [quill, setQuill] = useState(null)\r\n\tconst [loaded, setLoaded] = useState(false)\r\n\r\n\t//firebase for backend\r\n\tfunction queryAndLoad () {\r\n\t\tfirebase\r\n\t\t.firestore()\r\n\t\t.collection(\"user_data\")\r\n\t\t.where(\"UID\", \"==\", 1) //todo multi user support\r\n\t\t.get()\r\n\t\t.then((querySnapshot) => {\r\n\t\t\t//assume UIDs to be unique\r\n\t\t\t//if querySnapshot isn't empty, then we found the ID\r\n\t\t\tif(!querySnapshot.empty){ \r\n\t\t\t\t// console.log(querySnapshot.docs[0].data().Data)\r\n\t\t\t\tloadIntoRTF(querySnapshot.docs[0].data().Data); //get [0] since theres only gonna be one\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t//inter-component communication via ref\r\n\t//rigged such that pressing button uploads data from firebase into the RTF doc itself\r\n\tfunction loadIntoRTF (data)  {\r\n\t\tconsole.log(data);\r\n\t\t\r\n\t\tquill.setContents(JSON.parse(data));\r\n\t\t//if loading overwrites whats on the RTF, alert for now\r\n\t\t// if(data !== this.getPlainText()){\r\n\t\t\t// console.log(123);\r\n\t\t// \tthis.dbToText(data);\r\n\t\t// }\r\n\t};\r\n\r\n\tfunction wipeData () {\r\n\r\n\t\tfirebase.firestore().collection(\"user_data\")\r\n\t\t.where(\"UID\", \"==\", 1) //todo multi user support\r\n\t\t.get()\r\n\t\t.then((querySnapshot) => {\r\n\t\t\t//assume UIDs to be unique\r\n\t\t\t//if querySnapshot isn't empty, then we found the ID\r\n\t\t\tif(!querySnapshot.empty){ \r\n\t\t\t\tconsole.log(querySnapshot.docs[0].id);\r\n\t\t\t\tfirebase.firestore().collection(\"user_data\")\r\n\t\t\t\t.doc(querySnapshot.docs[0].id)\r\n\t\t\t\t.update({\r\n\t\t\t\t\tData : \"test\"\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => { console.log(\"error turing update op\")});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => { console.log(\"error during store func\")\r\n\t\t});\r\n\r\n\t\twindow.location.reload();\r\n\r\n\t}\r\n\r\n\t//saves whatever is in RTF box to database\r\n\tfunction storeIntoDatabase () {\r\n\t\tconst data = JSON.stringify(quill.getContents());\r\n\t\t// console.log(data);\r\n\r\n\t\tfirebase.firestore().collection(\"user_data\")\r\n\t\t.where(\"UID\", \"==\", 1) //todo multi user support\r\n\t\t.get()\r\n\t\t.then((querySnapshot) => {\r\n\t\t\t//assume UIDs to be unique\r\n\t\t\t//if querySnapshot isn't empty, then we found the ID\r\n\t\t\tif(!querySnapshot.empty){ \r\n\t\t\t\t// console.log(querySnapshot.docs[0].id);\r\n\t\t\t\tfirebase.firestore().collection(\"user_data\")\r\n\t\t\t\t.doc(querySnapshot.docs[0].id)\r\n\t\t\t\t.update({\r\n\t\t\t\t\tData : data\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => { console.log(\"error turing update op\")});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => { console.log(\"error during store func\")\r\n\t\t});\r\n\t\t\r\n\t\t// alert(\"Saved to Database\");\r\n\t}\r\n\r\n\tasync function generatePDF ()  {\r\n\t\tconst delta = quill.getContents(); // gets the Quill delta\r\n\t\tconst pdfAsBlob = await pdfExporter.generatePdf(delta); // converts to PDF\r\n\t\tsaveAs(pdfAsBlob, 'pdf-export.pdf'); // downloads from the browser\r\n\t}\r\n\r\n\t//detect all changes to quill var via listeners\r\n\t//todo: add to presenation - observer pattern\r\n\t//for now, not used\r\n\tuseEffect(() => {\r\n\t\tif ( quill == null) return\r\n\r\n\t\t//todo - figure out deltas\r\n\t\tconst handler = (delta, oldDelta, source) => { \r\n\t\t\tif (source !== 'user') return;\r\n\t\t\t// console.log(delta);\r\n\t\t\tstoreIntoDatabase();\r\n\t\t\t// changes = changes.compose(delta);\r\n\t\t}\r\n\t\tquill.on('text-change', handler);\r\n\t\r\n\t\treturn () => {\r\n\t\t\tquill.off('text-change', handler);\r\n\t\t}\r\n\t}, [quill]) //only cakk if our quill state changes\r\n\t\r\n\r\n\t// function asdf(q){\r\n\t// \tsetQuill(q)\r\n\t// \tsetLoaded(true)\r\n\t// \twhile(quill === null && loaded === false){\r\n\t// \t\tconsole.log(\"idk\");\r\n\t// \t}\r\n\t\t\r\n\t// \tqueryAndLoad()\r\n\t// }\r\n\r\n\t//our on component mount\r\n\t//as soon as div id container returns, it's gonna call useCallback and assign the wrapperRef\r\n\t//aka our wrapper input is defined\r\n\tconst wrapperRef = useCallback((wrapper) => {\r\n\t\tif(wrapper == null) return //if bottom return hasn't shown up yet \r\n\t\twrapper.innerHTML = '' //resets our rendered elements\r\n\t\tconst editor = document.createElement('div') //create a new div\r\n\t\twrapper.append(editor); //shove that new stuff into the wrapper\r\n\t\tconst q = new Quill(editor, { theme: \"snow\", formula: true, modules: { toolbar: TOOLBAR_OPTIONS } }) \r\n\t\tsetQuill(q)\r\n\t\t\r\n\t\tconsole.log(\"rtf mounted\")\r\n\t}, []) \r\n\tqueryAndLoad();\r\n\t\r\n\t// useEffect( () => {\r\n\t// \tqueryAndLoad()\r\n\t// }, [])\r\n\r\n\t //so the set state has time to finish (setQuill op)\r\n\t// var enableMathQuillFormulaAuthoring = mathquill4quill();\r\n\t// enableMathQuillFormulaAuthoring(quill);\r\n\r\n\treturn (\r\n\t\t<div> \r\n\t\t\t<div className=\"container\" ref= {wrapperRef}> </div>\r\n\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button onClick={queryAndLoad}>Load from Database to RTF</button>\r\n\t\t\t\t<button onClick={storeIntoDatabase}>Save from RTF into Database</button>\r\n\t\t\t\t<button onClick={wipeData}>Wipe Data</button>\r\n\t\t\t\t<button onClick={generatePDF}>get your pdf</button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n */\r\n","const sidebarStyles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    },\r\n    newNoteBtn: {\r\n      width: '100%',\r\n      height: '35px',\r\n      borderBottom: '1px solid black',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#29487d',\r\n      color: 'white',\r\n      '&:hover': {\r\n        backgroundColor: '#88a2ce'\r\n      }\r\n    },\r\n    sidebarContainer: {\r\n      marginTop: '0px',\r\n      width: '300px',\r\n      height: '100%',\r\n      boxSizing: 'border-box',\r\n      float: 'left',\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden'\r\n    },\r\n    newNoteInput: {\r\n      width: '100%',\r\n      margin: '0px',\r\n      height: '35px',\r\n      outline: 'none',\r\n      border: 'none',\r\n      paddingLeft: '5px',\r\n      '&:focus': {\r\n        outline: '2px solid rgba(81, 203, 238, 1)'\r\n      }\r\n    },\r\n    newNoteSubmitBtn: {\r\n      width: '100%',\r\n      backgroundColor: '#28787c',\r\n      borderRadius: '0px',\r\n      color: 'white'\r\n    }\r\n  });\r\n  \r\n  export default sidebarStyles;","const itemStyles = theme => ({\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    textSection: {\r\n      maxWidth: '85%',\r\n      fontWeight: 'bold'\r\n    },  \r\n    deleteIcon: {\r\n      position: 'absolute',\r\n      right: '5px',\r\n      top: 'calc(50% - 15px)',\r\n      '&:hover': {\r\n        color: 'red'\r\n      }\r\n    }\r\n  });\r\n  \r\n  export default itemStyles;","  \r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport itemStyles from './itemStyle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass SidebarItem extends React.Component {\r\n\r\n    selectNote = (n, i) => this.props.selectNote(n, i);\r\n    deleteNote = (n) => {\r\n        // console.log(\"sdfs\");\r\n        if(window.confirm(`Are you sure you wanna delete ${n.title}`)){\r\n            this.props.deleteNote(n);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {index, note, classes, selectedNoteIndex} = this.props;\r\n\r\n        return (\r\n            <div> \r\n                <ListItem\r\n                    className={classes.listItem}\r\n                    selected={selectedNoteIndex === index}\r\n                    alignItems=\"flex-start\">\r\n                    <div className={classes.textSection}\r\n                        onClick={()=>this.selectNote(note, index)}>\r\n                            {note.title} {/*note.body for debug */}\r\n                    </div>\r\n                    <DeleteIcon \r\n                        className={classes.deleteIcon}\r\n                        onClick= {() => this.deleteNote(note)}>\r\n                    </DeleteIcon>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(itemStyles)(SidebarItem);\r\n","  \r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport sidebarStyles from './sidebarStyle';\r\nimport List from '@material-ui/core/List';\r\nimport { Divider, Button } from '@material-ui/core';\r\nimport SidebarItem from './sidebarItem';\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            addingNote: false,\r\n            title: null\r\n        };\r\n    }\r\n\r\n    createNoteSetup = () => {\r\n        this.setState({ title: null, addingNote: !this.state.addingNote})\r\n        // console.log(\"new note\");\r\n    }\r\n\r\n    createNote = () => {\r\n        this.props.createNote(this.state.title);\r\n        this.setState({ title: null, addingNote : false});\r\n    }\r\n\r\n    updateTitle = (txt) => {\r\n        this.setState({ title : txt })\r\n    }   \r\n\r\n    selectNote = (note, index) => {\r\n        this.props.selectNote(note, index);\r\n    }\r\n\r\n    deleteNote = (note) => {\r\n\r\n        this.props.deleteNote(note);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {notes, classes, selectedNoteIndex } = this.props\r\n\r\n        if(notes){\r\n            return ( //classes.sidbarContainer associates div with sidebarStyles\r\n                // <div/>\r\n                <div className={classes.sidebarContainer}> \r\n                    <Button onClick={this.createNoteSetup}\r\n                            className ={classes.newNoteBtn}>\r\n                                {!this.state.addingNote ? \"new note\" : \"cancel\"}\r\n                    </Button>\r\n                    {this.state.addingNote ? \r\n                    <div>\r\n                        <input type=\"text\"\r\n                            className={classes.newNoteInput}\r\n                            placeholder=\"Enter note title\"\r\n                            onKeyUp={(e) => this.updateTitle(e.target.value)}>\r\n                        </input>  \r\n                        <Button onClick={this.createNote}\r\n                                className={classes.newNoteSubmitBtn}>\r\n                                    Submit Note\r\n                        </Button>\r\n\r\n                    </div> : null\r\n                    }\r\n                    <List>\r\n                        {\r\n                            notes.map((e, i) => {\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <SidebarItem\r\n                                            note={e}\r\n                                            index={i}\r\n                                            selectedNoteIndex={selectedNoteIndex}\r\n                                            selectNote={this.selectNote}\r\n                                            deleteNote={this.deleteNote}>\r\n\r\n                                        </SidebarItem>\r\n                                        <Divider></Divider>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(<div>Add a note!</div>);\r\n        }\r\n    } \r\n\r\n} export default withStyles(sidebarStyles)(Sidebar);\r\n","import React, { Component  }from 'react';\r\n// import '../styles.css';\r\nimport '../App.css';\r\n\r\nimport RichTextEditor from './RichTextEditor';\r\nimport Sidebar from './hierarchy/sidebar';\r\nimport SidebarItem from './hierarchy/sidebarItem';\r\nimport firebase from './firebase';\r\n\r\n//wraps rtf such that the button groups are organized by hierarchies\r\nexport default class MainEditor extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tselectedNoteIndex: null,\r\n\t\t\tselectedNote: null,\r\n\t\t\tnotes: null\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tfirebase\r\n\t\t.firestore()\r\n\t\t.collection(\"notes\")\r\n\t\t.onSnapshot(su => {\r\n\t\t\tconst notes = su.docs.map(doc => {\r\n\t\t\t\tconst data = doc.data();\r\n\t\t\t\tdata['id'] = doc.id;\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t\tconsole.log(notes);\r\n\t\t\tthis.setState({notes: notes});\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tselectNote = (note, index) => {\r\n\t\tthis.setState({selectedNoteIndex : index, selectedNote : note});\r\n\t}\r\n\r\n\tdeleteNote = async  (note) => {\r\n\t\tconst noteIndex = this.state.notes.indexOf(note);\r\n\t\tawait this.setState({notes: this.state.notes.filter(n => note !== n) });\r\n\t\tif(this.state.selectedNoteIndex === noteIndex){\r\n\t\t\tthis.setState({ selectedNoteIndex: null, selectedNote: null})\r\n\t\t} else {\r\n\t\t\tthis.state.notes.elngth > 1 ?\r\n\t\t\tthis.selectNote(this.state.notes[this.state.selectedNotesIndex - 1], this.state.selectedNoteIndex - 1)\r\n\t\t\t: this.setState({ selectedNoteIndex: null, selectedNote: null})\r\n\t\t}\r\n\r\n\t\tfirebase\t\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"notes\")\r\n\t\t\t.doc(note.id)\r\n\t\t\t.delete();\r\n\t}\r\n\r\n\tcreateNote = async (title) => {\r\n\t\tconsole.log(\"creating...\");\r\n\t\tconst note = {\r\n\t\t\ttitle: title,\r\n\t\t\tbody: ''\r\n\t\t};\r\n\t\tconst newFromDB = await firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"notes\")\r\n\t\t\t\t.add({\r\n\t\t\t\t\ttitle: note.title,\r\n\t\t\t\t\tbody: note.body,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t});\r\n\t\tconst newID = newFromDB.id;\r\n\t\tawait this.setState({notes : [...this.state.notes, note] });\r\n\t\tconst newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(note => note.id === newID)[0]);\r\n\t\tthis.setState({ selectedNote: this.state.notes[newNoteIndex], seslectedNoteIndex: newNoteIndex });\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Sidebar\r\n\t\t\t\t\tselectedNoteIndex = {this.state.selectedNoteIndex}\r\n\t\t\t\t\tnotes = {this.state.notes}\r\n\t\t\t\t\tselectNote = {this.selectNote}\r\n\t\t\t\t\tdeleteNote = {this.deleteNote}\r\n\t\t\t\t\tcreateNote = {this.createNote}\r\n\t\t\t\t/>\r\n\t\t\t\t{this.state.selectedNote ? \r\n\t\t\t\t<RichTextEditor\r\n\t\t\t\t\tselectedNoteIndex={this.state.selectedNoteIndex}\r\n\t\t\t\t\tselectedNote={this.state.selectedNote}\r\n\t\t\t\t\tnotes={this.state.notes}/>\r\n\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button onClick = { () => {\r\n\t\t\t\t\t\tthis.props.history.push('/EZ-Math-Tester')\r\n\t\t\t\t\t}}> Switch to Test Mode</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Banner from './components/Banner';\r\nimport MultiChoice from './components/MultiChoice';\r\nimport MainEditor from './components/MainEditor';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\n/****************************************\r\nThe entry point of our application\r\nComponents and sections of our design are separated through the react-router-dom\r\n****************************************/\r\n\r\n\r\nvar tex = \"\"\r\n\r\nclass App extends React.PureComponent{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div id = \"content\"> {/* Note div id and div class are not the same. div id should be unique to each .js file and div class can be reused to apply the same css style */}\r\n\t\t\t\t<Router>\r\n\t\t\t\t<Banner />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/EZ-Math-Editor\" component = {MainEditor} />\r\n\t\t\t\t\t<Route path=\"/EZ-Math-Tester\" component = {MultiChoice} />\r\n\t\t\t\t</Switch>\t\t\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}