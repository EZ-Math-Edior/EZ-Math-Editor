{"version":3,"sources":["components/Banner.js","components/firebase.js","components/MultiChoice.js","components/jquery.js","components/RichTextEditor.js","components/hierarchy/sidebarStyle.js","components/hierarchy/itemStyle.js","components/hierarchy/sidebarItem.js","components/hierarchy/sidebar.js","components/MainEditor.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","MultiChoice","props","flush","setState","key","title","currQuestion","currScore","startedTest","finishedTest","questions","averageScore","totalTakers","onAnswerChosen","isCorrect","oldScore","state","nextQuestion","length","onTestFinish","firestore","collection","doc","get","then","exists","updateMaster","data","sumScore","sumTakers","alert","catch","e","console","log","currCorrect","currTakers","newScore","newTakers","avg","Math","round","update","onTestInit","queryTestDB","parseQuestions","arr","JSON","parse","ops","map","ins","insert","content","forEach","elem","formula","split","qSeg","prompt","choices","i","push","answerText","addQuestion","testSetup","body","temp","question","this","answerOption","class","onClick","history","Component","window","jQuery","$","katex","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","RichTextEditor","queryAndLoad","selectedNote","id","loadIntoRTF","quill","current","editor","setContents","storeIntoDatabase","stringify","getContents","generatePDF","a","delta","pdfExporter","generatePdf","pdfAsBlob","saveAs","onEditorUpdate","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","publishTest","test","add","newFromDB","newID","React","createRef","mathquill4quill","Quill","enableMathQuillFormulaAuthoring","options","ref","modules","toolbar","theme","onChange","sidebarStyles","root","backgroundColor","palette","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","itemStyles","listItem","cursor","textSection","maxWidth","fontWeight","deleteIcon","SidebarItem","selectNote","n","deleteNote","confirm","index","note","classes","selectedNoteIndex","ListItem","selected","alignItems","withStyles","Sidebar","createNoteSetup","addingNote","createNote","updateTitle","txt","notes","Button","type","placeholder","onKeyUp","target","value","List","Divider","MainEditor","componentDidMount","onSnapshot","su","docs","noteIndex","indexOf","filter","elngth","selectedNotesIndex","delete","timestamp","FieldValue","serverTimestamp","newNoteIndex","App","path","component","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.850ea424.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport '../index.css'\r\n\r\n//The banner at the top of all our routes\r\nfunction Banner(){\r\n\treturn (\r\n\t\t<nav className = \"Home\">\r\n\t\t\t<h1>EZ-Math Editor</h1>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Banner;","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\";\r\n\r\n//handles the authentication to the back end\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBIZUh5JGnR3ZuHRHEH_-Scodkf7iHsTXE\",\r\n    authDomain: \"ez-math-editor.firebaseapp.com\",\r\n    projectId: \"ez-math-editor\",\r\n    storageBucket: \"ez-math-editor.appspot.com\",\r\n    messagingSenderId: \"254306906260\",\r\n    appId: \"1:254306906260:web:c1e08043359d912454c481\",\r\n    measurementId: \"G-FEDCPCWDRR\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component  }from 'react';\r\nimport './MultiChoice.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport firebase from './firebase';\r\n\r\n//the router that presents the multiple choice testing\r\n//handles a collection of questions and assesses the user\r\n//data on these questions are pulled directly from the back end\r\nexport default class MultiChoice extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tkey : null,\r\n\t\t\ttitle : \"\",\r\n\t\t\tcurrQuestion : 0,\r\n\t\t\tcurrScore : 0,\r\n\t\t\tstartedTest : false,\r\n\t\t\tfinishedTest : false,\r\n\t\t\tquestions : [],\r\n\t\t\taverageScore : 0,\r\n\t\t\ttotalTakers : 0\r\n\t\t};\r\n\t}\r\n\r\n\tflush = () => {\r\n\t\tthis.setState({\r\n\t\t\tkey : null,\r\n\t\t\ttitle : \"\",\r\n\t\t\tcurrQuestion : 0,\r\n\t\t\tcurrScore : 0,\r\n\t\t\tstartedTest : false,\r\n\t\t\tfinishedTest : false,\r\n\t\t\tquestions : [],\r\n\t\t\taverageScore : 0,\r\n\t\t\ttotalTakers : 0\r\n\t\t}); \r\n\t}\r\n\r\n\tonAnswerChosen = (isCorrect) => {\r\n\t\tif(isCorrect){\r\n\t\t\tconst oldScore = this.state.currScore;\r\n\t\t\tthis.setState({currScore: oldScore+1})\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = this.state.currQuestion + 1;\r\n\t\tif(nextQuestion < this.state.questions.length) {\r\n\t\t\tthis.setState({currQuestion : nextQuestion})\r\n\t\t} else {\r\n\t\t\tthis.setState({finishedTest : true}, () => {\r\n\t\t\t\tthis.onTestFinish();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonTestFinish = () => {\r\n\t\t//modify master data\r\n\t\t//increment takers by 1\r\n\t\t//increment score by successes\r\n\t\tfirebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"tests\")\r\n\t\t\t.doc(this.state.key)\r\n\t\t\t.get()\r\n\t\t\t.then((doc) => {\r\n\t\t\t\tif(doc.exists){\r\n\t\t\t\t\tthis.updateMaster(doc.data().sumScore, doc.data().sumTakers); //get [0] since theres only gonna be one\r\n\t\t\t\t} else{\r\n\t\t\t\t\talert(\"test not found!\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdateMaster = (currCorrect, currTakers) => {\r\n\t\tconst newScore = currCorrect + this.state.currScore;\r\n\t\tconst newTakers = currTakers + 1;\r\n\r\n\t\tconst avg = Math.round( (newScore / (newTakers * this.state.questions.length)) * 100) / 100;\r\n\t\tthis.setState({averageScore : avg, totalTakers : newTakers}, () => {\r\n\t\t\tfirebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"tests\")\r\n\t\t\t.doc(this.state.key)\r\n\t\t\t.update({\r\n\t\t\t\tsumScore : newScore,\r\n\t\t\t\tsumTakers : newTakers\r\n\t\t\t}).catch((e) => { console.log(\"error turing update op\")});\r\n\t\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tonTestInit = () => {\r\n\t\tthis.queryTestDB();\r\n\t\t// this.setState({startedTest : true});\r\n\t}\r\n\r\n\t//stores all the questions into its array in state\r\n\t//for now don't support formulas\r\n\t//yQiP6IOm4rdyhE2RCXBv\r\n\tparseQuestions = (data) => {\r\n\t\tconsole.log(data);\r\n\t\tvar arr = JSON.parse(data).ops.map(ins => {\r\n\t\t\treturn ins.insert;\r\n\r\n\t\t}); //list of inserts\r\n\t\t\r\n\t\tvar content = \"\";\r\n\t\tarr.forEach(elem => {\r\n\t\t\t// console.log(elem);\r\n\t\t\tif(!elem.formula){\r\n\t\t\t\tcontent += elem;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(elem);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// const content = JSON.parse(data).ops[0].insert\r\n\t\t// console.log(content)\r\n\t\tcontent.split(\"\\n\").forEach( (elem) => {\r\n\t\t\tconsole.log(elem)\r\n\t\t\tlet qSeg = elem.split(\";;\");\r\n\t\t\t \r\n\t\t\t if(qSeg.length > 3){\r\n\t\t\t\tlet prompt = \"\";\r\n\t\t\t\tlet choices = []\r\n\t\t\t\tfor(let i = 0; i < qSeg.length; ++i){ \r\n\t\t\t\t\tconsole.log(qSeg[i])\r\n\t\t\t\t\tif(i === 0) {\r\n\t\t\t\t\t\tprompt = qSeg[i];\r\n\t\t\t\t\t} else if (i === qSeg.length-1){\r\n\t\t\t\t\t\tchoices[qSeg[i]-1].isCorrect = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchoices.push({answerText: qSeg[i], isCorrect: false});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n   \r\n\t\t\t\tconsole.log(prompt);\r\n\t\t\t\tconsole.log(choices);\r\n\t\t\t\tthis.addQuestion(prompt, choices);\r\n\t\t\t }\r\n\t\t\r\n\t\t })\r\n\t\t console.log(this.state.questions);\r\n\r\n\t\t if(this.state.questions.length === 0){\r\n\t\t\t alert(\"invalid test\")\r\n\t\t\t this.flush();\r\n\t\t } else {\r\n\t\t\tthis.setState({startedTest : true})\r\n\t\t }\r\n\r\n\t\r\n\t}\r\n\r\n\tqueryTestDB = () => {\r\n\t\tvar key = prompt(\"Enter test key: \");\r\n\t\tif(!key) return;\r\n\t\tthis.setState({key : key})\r\n\t\tfirebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"tests\")\r\n\t\t\t.doc(key)\r\n\t\t\t.get()\r\n\t\t\t.then((doc) => {\r\n\t\t\t\tif(doc.exists){\r\n\t\t\t\t\tthis.testSetup(doc.data().title, doc.data().body); //get [0] since theres only gonna be one\r\n\r\n\t\t\t\t} else{\r\n\t\t\t\t\talert(\"test not found!\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\ttestSetup = (title, body) => {\r\n\t\tthis.setState({title : title}, () => {\r\n\t\t\tthis.parseQuestions(body);\r\n\t\t})\r\n\t}\r\n\r\n\t//adds a question to the question container\r\n\taddQuestion = (prompt, choices) => {\r\n\t\tvar temp = this.state.questions;\r\n\t\tvar question = {\r\n\t\t\tprompt : prompt,\r\n\t\t\tchoices : choices\r\n\t\t}\r\n\r\n\t\ttemp.push(question)\r\n\t\tthis.setState({\r\n\t\t\tquestions : temp\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className = \"mcapp\">\r\n\t\t\t\t{this.state.startedTest ? \r\n\t\t\t\t\t<div className='title-section'>\r\n\t\t\t\t\t\t{this.state.title}\r\n\t\t\t\t\t</div>: null}\r\n\t\t\t\t{this.state.startedTest ?  ( \r\n\t\t\t\t\t  this.state.finishedTest ? (\r\n\t\t\t\t\t \t\t<div className='score-section'>\r\n\t\t\t\t\t \t\t\tYou scored {this.state.currScore} out of {this.state.questions.length} \r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\tAverage Score: {this.state.averageScore}\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\tTotal Takers: {this.state.totalTakers}\r\n\t\t\t\t\t \t\t</div>\r\n\t\t\t\t\t \t) : (\r\n\t\t\t\t\t \t\t<>\r\n\t\t\t\t\t \t\t\t<div className = \"question-section\">\r\n\t\t\t\t\t \t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t \t\t\t\t\t<span> Question {this.state.currQuestion + 1} </span> of {this.state.questions.length}\r\n\t\t\t\t\t \t\t\t\t</div>\r\n\t\t\t\t\t \t\t\t\t<div className=\"question-text\">{this.state.questions[this.state.currQuestion].prompt}</div>\r\n\t\t\t\t\t \t\t\t</div>\r\n\t\t\t\t\t \t\t\t<div className='answer-section'>\r\n\t\t\t\t\t \t\t\t\t{this.state.questions[this.state.currQuestion].choices.map((answerOption, i) => (\r\n\t\t\t\t\t \t\t\t\t\t<div class = 'btnwrap' key = {i} >\r\n\t\t\t\t\t\t\t\t\t\t <button onClick={() => this.onAnswerChosen(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t \t))}\r\n\t\t\t\t\t \t\t\t</div>\r\n\t\t\t\t\t \t\t</>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t \t) \r\n\t\t\t) : ( \r\n\t\t\t\t<div className = \"start-button\" >\r\n\t\t\t\t\t<button onClick = {this.onTestInit}> Start Quiz </button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t)}\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button onClick = { () => {\r\n\t\t\t\t\t\tthis.props.history.push('/EZ-Math-Editor')\r\n\t\t\t\t\t}}> Switch to Editor Mode</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t// <div className = \"content\">\r\n\t\t\t// \t    <div className=\"Quiz\">\r\n\t\t\t// \t\t<h1>{this.state.readyToDisplay && this.state.Questions[this.state.currQuestion].prompt}</h1>\r\n\t\t\t// \t\t<h2>{this.state.readyToDisplay && \"chose: \" + this.state.currOption} </h2>\r\n\t\t\t// \t\t\t <div className=\"q-group\">\r\n\t\t\t// \t\t\t {this.state.readyToDisplay && this.state.Questions[this.state.currQuestion].choices.map( (q, i) => { //for each choice, display a question\r\n\t\t\t// \t\t\t\t return (<button \r\n\t\t\t// \t\t\t\t\tkey= {i}\r\n\t\t\t// \t\t\t\t \tonClick={() => {\r\n\t\t\t// \t\t\t\t\t\t this.chooseOption(q);\r\n\t\t\t// \t\t\t\t\t }}>\r\n\t\t\t// \t\t\t\t\t\t {q}\r\n\t\t\t// \t\t\t\t\t </button>)\r\n\t\t\t// \t\t\t })}\r\n\t\t\t\t\t\t\t\r\n\t\t\t// \t\t\t{this.state.readyToDisplay && this.state.currQuestion === this.state.Questions.length - 1 ? (\r\n\t\t\t// \t\t\t\t<button onClick={this.finishQuiz} id=\"nextQuestion\">\r\n\t\t\t// \t\t\t\tFinish Quiz\r\n\t\t\t// \t\t\t\t</button>\r\n\t\t\t// \t\t\t) : this.state.readyToDisplay && this.state.currQuestion != this.state.Questions.length - 1 ? (\r\n\t\t\t// \t\t\t\t<button onClick={this.nextQuestion} id=\"nextQuestion\">\r\n\t\t\t// \t\t\t\tNext Question\r\n\t\t\t// \t\t\t\t</button>\r\n\t\t\t// \t\t\t) :  \"\"}\r\n\t\t\t\t\t\t\r\n\t\t\t// \t\t\t</div>\r\n\t\t\t// \t\t</div>\r\n\t\t\t// \t<div className=\"btn-group\">\r\n\t\t\t// \t\t<button onClick = {this.queryDB}> Load Test</button>\r\n\t\t\t// \t\t<button onClick = { () => {\r\n\t\t\t// \t\t\tthis.props.history.push('/EZ-Math-Editor')\r\n\t\t\t// \t\t}}> Switch to Editor Mode</button>\r\n\r\n\t\t\t// \t</div>\r\n\t\t\t// </div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n","import $ from \"jquery\";\r\n\r\nwindow.jQuery = window.$ = $;","import React, { useEffect, useState, useRef, useCallback  }from 'react';\r\nimport '../App.css';\r\nimport { saveAs } from 'file-saver';\r\nimport { pdfExporter } from 'quill-to-pdf';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport firebase from './firebase';\r\nimport \"quill/dist/quill.snow.css\"\r\nimport Quill from \"quill\"\r\nimport ReactQuill from 'react-quill';\r\nimport katex from \"katex\";\r\n\r\nimport \"katex/dist/katex.css\";\r\n\r\nimport \"./jquery\";\r\nimport \"mathquill/build/mathquill.js\";\r\nimport \"mathquill/build/mathquill.css\";\r\n\r\nimport mathquill4quill from \"mathquill4quill\";\r\nimport \"mathquill4quill/mathquill4quill.css\";\r\nimport { ContactlessOutlined } from '@material-ui/icons';\r\nwindow.katex = katex;\r\n\r\n//read docs for this, gives us everything for the toolbar options (set below)\r\nconst TOOLBAR_OPTIONS = [\r\n\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\t[{ font: [] }],\r\n\t[{ list: \"ordered\" }, { list: \"bullet\" }],\r\n\t[\"bold\", \"italic\", \"underline\"],\r\n\t[{ color: [] }, { background: [] }],\r\n\t[{ script: \"sub\" }, { script: \"super\" }],\r\n\t[{ align: [] }],\r\n\t[\"image\", \"blockquote\", \"code-block\"],\r\n\t['formula'],\r\n\t[\"clean\"],\r\n  ]\r\n\r\nexport default class RichTextEditor extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.quill = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tid : '',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst enableMathQuillFormulaAuthoring = mathquill4quill({ Quill, katex });\r\n\t\tenableMathQuillFormulaAuthoring(\r\n\t\t  this.quill.current.editor,\r\n\t\t  this.props.options\r\n\t\t);\r\n\t\tthis.setState({\r\n\t\t\tid : this.props.selectedNote.id\r\n\t\t}, () => { this.queryAndLoad() } )\r\n\t\t\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tthis.storeIntoDatabase();\r\n\t}\r\n\tcomponentDidUpdate(){\r\n\t\tif(this.props.selectedNote.id !== this.state.id){\r\n\t\t\tconsole.log(\"switching note\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tid : this.props.selectedNote.id\r\n\t\t\t}, () => { this.queryAndLoad() } )\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//firebase for backend\r\n\tqueryAndLoad = () => {\r\n\t\tconsole.log(this.props.selectedNote.id);\r\n\t\tfirebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"notes\")\r\n\t\t\t.doc(this.props.selectedNote.id)\r\n\t\t\t.get()\r\n\t\t\t.then((doc) => {\r\n\t\t\t\tif(doc.exists){\r\n\t\t\t\tthis.loadIntoRTF(doc.data().body); //get [0] since theres only gonna be one\r\n\t\t\t\t\t\r\n\t\t\t\t} else{\r\n\t\t\t\t\tconsole.log(\"no data found\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => { console.log(\"error during query and load func\")\r\n\t\t\t});\r\n\r\n\t}\r\n\t\r\n\r\n\t//inter-component communication via ref\r\n\t//rigged such that pressing button uploads data from firebase into the RTF doc itself\r\n\tloadIntoRTF = (data) => {\r\n\t\tconsole.log(data);\r\n\t\tthis.quill.current.editor.setContents(JSON.parse(data));\r\n\t}\r\n\r\n\t//saves whatever is in RTF box to database\r\n\tstoreIntoDatabase = () => {\r\n\t\tconst data = JSON.stringify( this.quill.current.editor.getContents());\r\n\t\t// console.log(data);\r\n\t\tfirebase\r\n\t\t.firestore()\r\n\t\t.collection(\"notes\")\r\n\t\t.doc(this.props.selectedNote.id)\r\n\t\t.update({\r\n\t\t\tbody : data\r\n\t\t}).catch((e) => { console.log(\"error turing update op\")});\r\n\r\n\t}\r\n\r\n\r\n\tgeneratePDF = async () => {\r\n\t\tconst delta = this.quill.current.editor.getContents(); // gets the Quill delta\r\n\t\tconst pdfAsBlob = await pdfExporter.generatePdf(delta); // converts to PDF\r\n\t\tsaveAs(pdfAsBlob, 'pdf-export.pdf'); // downloads from the browser\r\n\t}\r\n\r\n\t//extremely inneficient - saves at every change\r\n\tonEditorUpdate = debounce( () => {\r\n\t\tconsole.log(\"saved\");\r\n\t\tthis.storeIntoDatabase();\r\n\t}, 1500);\r\n\t\t\r\n\tpublishTest = async () => {\r\n\t\t// console.log(this.quill.current.editor.root.innerHTML)\r\n\t\tvar title =  prompt(\"Enter Test Name\", \"\");\r\n\t\tif(!title) return;\r\n\t\tconst data = JSON.stringify( this.quill.current.editor.getContents());\r\n\r\n\t\tconst test = {\r\n\t\t\ttitle: title,\r\n\t\t\tbody: data\r\n\t\t};\r\n\t\tconst newFromDB = await firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tests\")\r\n\t\t\t\t.add({\r\n\t\t\t\t\ttitle: test.title,\r\n\t\t\t\t\tbody: test.body,\r\n\t\t\t\t\tsumScore: 0,\r\n\t\t\t\t\tsumTakers: 0\r\n\t\t\t\t});\r\n\t\tconst newID = newFromDB.id;\r\n\t\talert(\"TEST KEY: \" + newID);\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div> \r\n\t\t\t\r\n\t\t\t\t<ReactQuill\r\n\t\t\t\t\tref = {this.quill}\r\n\t\t\t\t\tid=\"editor\"\r\n\t\t\t\t\tmodules={{\r\n\t\t\t\t\t\tformula: true,\r\n\t\t\t\t\t\ttoolbar: TOOLBAR_OPTIONS\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttheme=\"snow\"\r\n\t\t\t\t\tonChange={this.onEditorUpdate}\r\n\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button onClick = {this.generatePDF}>get your pdf</button> \r\n\t\t\t\t\t<button onClick = {this.publishTest}> Publish Test</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\t//https://github.com/portexe/evernote-clone/blob/master/src/helpers.js\r\n\texport function debounce (a,b,c) { //cancels a function everytime deboucne is called, until a window of time is long enough\r\n\t\tvar d,e;\r\n\t\treturn function(){\r\n\t\t  function h(){\r\n\t\t\td=null;\r\n\t\t\tc||(e=a.apply(f,g));\r\n\t\t  }\r\n\t\t  var f=this,g=arguments;\r\n\t\t  return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n\t\t}\r\n\t  }\r\n\r\n","const sidebarStyles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    },\r\n    newNoteBtn: {\r\n      width: '100%',\r\n      height: '35px',\r\n      borderBottom: '1px solid black',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#0073d8',\r\n      color: 'white',\r\n      '&:hover': {\r\n        backgroundColor: '#88a2ce'\r\n      }\r\n    },\r\n    sidebarContainer: {\r\n      marginTop: '0px',\r\n      width: '300px',\r\n      height: '100%',\r\n      boxSizing: 'border-box',\r\n      float: 'left',\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden'\r\n    },\r\n    newNoteInput: {\r\n      width: '100%',\r\n      margin: '0px',\r\n      height: '35px',\r\n      outline: 'none',\r\n      border: 'none',\r\n      paddingLeft: '5px',\r\n      '&:focus': {\r\n        outline: '2px solid rgba(81, 203, 238, 1)'\r\n      }\r\n    },\r\n    newNoteSubmitBtn: {\r\n      width: '100%',\r\n      backgroundColor: '#009364',\r\n      borderRadius: '0px',\r\n      color: 'white'\r\n    }\r\n  });\r\n  \r\n  export default sidebarStyles;","const itemStyles = theme => ({\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    textSection: {\r\n      maxWidth: '85%',\r\n      fontWeight: 'bold'\r\n    },  \r\n    deleteIcon: {\r\n      position: 'absolute',\r\n      right: '5px',\r\n      top: 'calc(50% - 15px)',\r\n      '&:hover': {\r\n        color: 'red'\r\n      }\r\n    }\r\n  });\r\n  \r\n  export default itemStyles;","  \r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport itemStyles from './itemStyle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass SidebarItem extends React.Component {\r\n\r\n    selectNote = (n, i) => this.props.selectNote(n, i);\r\n    deleteNote = (n) => {\r\n        // console.log(\"sdfs\");\r\n        if(window.confirm(`Are you sure you wanna delete ${n.title}`)){\r\n            this.props.deleteNote(n);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {index, note, classes, selectedNoteIndex} = this.props;\r\n\r\n        return (\r\n            <div> \r\n                <ListItem\r\n                    className={classes.listItem}\r\n                    selected={selectedNoteIndex === index}\r\n                    alignItems=\"flex-start\">\r\n                    <div className={classes.textSection}\r\n                        onClick={()=>this.selectNote(note, index)}>\r\n                            {note.title} {/*note.body for debug */}\r\n                    </div>\r\n                    <DeleteIcon \r\n                        className={classes.deleteIcon}\r\n                        onClick= {() => this.deleteNote(note)}>\r\n                    </DeleteIcon>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(itemStyles)(SidebarItem);\r\n","  \r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport sidebarStyles from './sidebarStyle';\r\nimport List from '@material-ui/core/List';\r\nimport { Divider, Button } from '@material-ui/core';\r\nimport SidebarItem from './sidebarItem';\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            addingNote: false,\r\n            title: null\r\n        };\r\n    }\r\n\r\n    createNoteSetup = () => {\r\n        this.setState({ title: null, addingNote: !this.state.addingNote})\r\n        // console.log(\"new note\");\r\n    }\r\n\r\n    createNote = () => {\r\n        this.props.createNote(this.state.title);\r\n        this.setState({ title: null, addingNote : false});\r\n    }\r\n\r\n    updateTitle = (txt) => {\r\n        this.setState({ title : txt })\r\n    }   \r\n\r\n    selectNote = (note, index) => {\r\n        this.props.selectNote(note, index);\r\n    }\r\n\r\n    deleteNote = (note) => {\r\n\r\n        this.props.deleteNote(note);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {notes, classes, selectedNoteIndex } = this.props\r\n\r\n        if(notes){\r\n            return ( //classes.sidbarContainer associates div with sidebarStyles\r\n                // <div/>\r\n                <div className={classes.sidebarContainer}> \r\n                    <Button onClick={this.createNoteSetup}\r\n                            className ={classes.newNoteBtn}>\r\n                                {!this.state.addingNote ? \"new file\" : \"cancel\"}\r\n                    </Button>\r\n                    {this.state.addingNote ? \r\n                    <div>\r\n                        <input type=\"text\"\r\n                            className={classes.newNoteInput}\r\n                            placeholder=\"Enter file title\"\r\n                            onKeyUp={(e) => this.updateTitle(e.target.value)}>\r\n                        </input>  \r\n                        <Button onClick={this.createNote}\r\n                                className={classes.newNoteSubmitBtn}>\r\n                                    Submit File\r\n                        </Button>\r\n\r\n                    </div> : null\r\n                    }\r\n                    <List>\r\n                        {\r\n                            notes.map((e, i) => {\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <SidebarItem\r\n                                            note={e}\r\n                                            index={i}\r\n                                            selectedNoteIndex={selectedNoteIndex}\r\n                                            selectNote={this.selectNote}\r\n                                            deleteNote={this.deleteNote}>\r\n\r\n                                        </SidebarItem>\r\n                                        <Divider></Divider>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(<div>Add a File!</div>);\r\n        }\r\n    } \r\n\r\n} export default withStyles(sidebarStyles)(Sidebar);\r\n","import React, { Component  }from 'react';\r\n// import '../styles.css';\r\nimport '../App.css';\r\n\r\nimport RichTextEditor from './RichTextEditor';\r\nimport Sidebar from './hierarchy/sidebar';\r\nimport SidebarItem from './hierarchy/sidebarItem';\r\nimport firebase from './firebase';\r\n\r\n//wraps rtf such that the button groups are organized by hierarchies\r\nexport default class MainEditor extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tselectedNoteIndex: null,\r\n\t\t\tselectedNote: null,\r\n\t\t\tnotes: null\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tfirebase\r\n\t\t.firestore()\r\n\t\t.collection(\"notes\")\r\n\t\t.onSnapshot(su => {\r\n\t\t\tconst notes = su.docs.map(doc => {\r\n\t\t\t\tconst data = doc.data();\r\n\t\t\t\tdata['id'] = doc.id;\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t\tconsole.log(notes);\r\n\t\t\tthis.setState({notes: notes});\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tselectNote = (note, index) => {\r\n\t\tthis.setState({selectedNoteIndex : index, selectedNote : note});\r\n\t}\r\n\r\n\tdeleteNote = async  (note) => {\r\n\t\tconst noteIndex = this.state.notes.indexOf(note);\r\n\t\tawait this.setState({notes: this.state.notes.filter(n => note !== n) });\r\n\t\tif(this.state.selectedNoteIndex === noteIndex){\r\n\t\t\tthis.setState({ selectedNoteIndex: null, selectedNote: null})\r\n\t\t} else {\r\n\t\t\tthis.state.notes.elngth > 1 ?\r\n\t\t\tthis.selectNote(this.state.notes[this.state.selectedNotesIndex - 1], this.state.selectedNoteIndex - 1)\r\n\t\t\t: this.setState({ selectedNoteIndex: null, selectedNote: null})\r\n\t\t}\r\n\r\n\t\tfirebase\t\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"notes\")\r\n\t\t\t.doc(note.id)\r\n\t\t\t.delete();\r\n\t}\r\n\r\n\tcreateNote = async (title) => {\r\n\t\tconsole.log(\"creating...\");\r\n\t\tconst note = {\r\n\t\t\ttitle: title,\r\n\t\t\tbody: '{\"ops\":[{\"insert\":\"\\\\n\\\\n\"}]}'\r\n\t\t};\r\n\t\tconst newFromDB = await firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"notes\")\r\n\t\t\t\t.add({\r\n\t\t\t\t\ttitle: note.title,\r\n\t\t\t\t\tbody: note.body,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t});\r\n\t\tconst newID = newFromDB.id;\r\n\t\tthis.setState({notes : [...this.state.notes, note] }, () => {\r\n\t\t\tconst newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(note => note.id === newID)[0]);\r\n\t\t\tthis.setState({ selectedNote: this.state.notes[newNoteIndex], selectedNoteIndex: newNoteIndex });\r\n\t\t});\r\n\t\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\r\n\t\t\t\r\n\t\t\t\t<Sidebar\r\n\t\t\t\t\tselectedNoteIndex = {this.state.selectedNoteIndex}\r\n\t\t\t\t\tnotes = {this.state.notes}\r\n\t\t\t\t\tselectNote = {this.selectNote}\r\n\t\t\t\t\tdeleteNote = {this.deleteNote}\r\n\t\t\t\t\tcreateNote = {this.createNote}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t{this.state.selectedNote ? \r\n\t\t\t\t<RichTextEditor\r\n\t\t\t\t\tselectedNoteIndex={this.state.selectedNoteIndex}\r\n\t\t\t\t\tselectedNote={this.state.selectedNote}\r\n\t\t\t\t\tnotes={this.state.notes}/>\r\n\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button onClick = { () => {\r\n\t\t\t\t\t\t\tthis.props.history.push('/EZ-Math-Tester')\r\n\t\t\t\t\t\t}}> Switch to Test Mode</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Banner from './components/Banner';\r\nimport MultiChoice from './components/MultiChoice';\r\nimport MainEditor from './components/MainEditor';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\n/****************************************\r\nThe entry point of our application\r\nComponents and sections of our design are separated through the react-router-dom\r\n****************************************/\r\n\r\n\r\nvar tex = \"\"\r\n\r\nclass App extends React.PureComponent{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div id = \"content\"> {/* Note div id and div class are not the same. div id should be unique to each .js file and div class can be reused to apply the same css style */}\r\n\t\t\t\t<Router>\r\n\t\t\t\t<Banner />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/EZ-Math-Editor\" component = {MainEditor} />\r\n\t\t\t\t\t<Route path=\"/EZ-Math-Tester\" component = {MultiChoice} />\r\n\t\t\t\t</Switch>\t\t\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}